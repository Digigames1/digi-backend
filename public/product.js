document.addEventListener("DOMContentLoaded", async () => {
  const pathParts = window.location.pathname.split("/").filter(Boolean);
  const [brand, region] = pathParts;

  const container = document.querySelector(".product-container");
  container.innerHTML = "<p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>";

  const apiUrl = region
    ? `/api/${brand}/${region}`
    : `/api/${brand}`;

  try {
    const res = await fetch(apiUrl);
    const data = await res.json();

    if (!Array.isArray(data) || data.length === 0) {
      container.innerHTML = "<p>–¢–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>";
      return;
    }

    if (!region) {
      // üëâ –Ø–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ /playstation ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ —Ä–µ–≥—ñ–æ–Ω–∏
      container.innerHTML = `<h1>${brand.toUpperCase()}</h1>`;
      data.forEach(region => {
        const div = document.createElement("div");
        div.classList.add("brand-box");
        div.innerHTML = `
          <img src="${region.logo}" alt="${region.name}" />
          <h3>${region.region}</h3>
          <a href="/${brand}/${region.region.toLowerCase()}">–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏</a>
        `;
        container.appendChild(div);
      });
    } else {
      // üëâ –Ø–∫—â–æ –º–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ /playstation/usa ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ —Ç–æ–≤–∞—Ä–∏
      container.innerHTML = `<h1>${brand.toUpperCase()} / ${region.toUpperCase()}</h1>`;
      data.forEach(product => {
        const div = document.createElement("div");
        div.classList.add("product-box");
        div.innerHTML = `
          <img src="${product.logo}" alt="${product.name}" />
          <p><strong>${product.name}</strong></p>
          <p>${product.price} ${product.currency}</p>
          <button onclick="buyProduct(${product.id})">–ö—É–ø–∏—Ç–∏</button>
        `;
        container.appendChild(div);
      });
    }
  } catch (err) {
    console.error("‚ùå Error loading product:", err);
    container.innerHTML = "<p>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤.</p>";
  }
});

function buyProduct(id) {
  alert(`üõí –í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä –∑ ID: ${id}\n–¢—É—Ç –±—É–¥–µ –ª–æ–≥—ñ–∫–∞ –æ–ø–ª–∞—Ç–∏.`);
}


