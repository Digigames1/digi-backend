const express = require("express");
const router = express.Router();
const axios = require("axios");

const {
  BAMBOO_CLIENT_ID,
  BAMBOO_CLIENT_SECRET,
  BAMBOO_BASE_URL
} = process.env;

// üîç –õ–æ–≥ –±–∞–∑–æ–≤–æ–≥–æ URL –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
console.log("üåç BAMBOO_BASE_URL =", BAMBOO_BASE_URL);

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
async function getAccessToken() {
  const url = `${BAMBOO_BASE_URL}/v1/oauth/token`;

  console.log("üîê –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –∑:", url);

  const response = await axios.post(
    url,
    {
      client_id: BAMBOO_CLIENT_ID,
      client_secret: BAMBOO_CLIENT_SECRET,
      grant_type: "client_credentials"
    },
    {
      headers: {
        "Content-Type": "application/json"
      }
    }
  );

  console.log("‚úÖ Bamboo —Ç–æ–∫–µ–Ω –æ—Ç—Ä–∏–º–∞–Ω–æ");
  return response.data.access_token;
}

// –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
router.get("/", async (req, res) => {
  try {
    const token = await getAccessToken();

    const catalogUrl = `${BAMBOO_BASE_URL}/v1/catalog`;
    console.log("üì¶ –ó–∞–ø–∏—Ç –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É:", catalogUrl);

    const response = await axios.get(catalogUrl, {
      headers: {
        Authorization: `Bearer ${token}`
      }
    });

    console.log("‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑ Bamboo:", response.data?.length || "‚úì");
    res.json(response.data);
  } catch (error) {
    const errData = error.response?.data || error.message;
    console.error("‚ùå Bamboo fetch error:", errData);
    res.status(error.response?.status || 500).json({
      error: "Failed to fetch products from Bamboo"
    });
  }
});

module.exports = router;




